@model Seqrus.Web.Helpers.ComplianceSettings
@using Microsoft.AspNetCore.Http
@using Microsoft.Extensions.Configuration

@inject IConfiguration Config

<h2 class="page-header">A3:2017 - Sensitive Data Exposure <risk-exposure is-exposed="Model.SensitiveDataExposure" /></h2>
<div class="seq-description">
    <p>Your data is probably important to you, so you should take adequate measures to protect it (e.g. by encrypting it), both in transit and at rest.</p>
    <p>Exposure to this risk means that an attacker can gain unauthorized access to your data.</p>

    <blockquote cite="https://www.owasp.org/index.php/Top_10-2017_A3-Sensitive_Data_Exposure">
        <p>Over the last few years, this has been the most common impactful attack. The most common flaw is simply not encrypting sensitive data.</p>
        <footer><a href="https://www.owasp.org/index.php/Top_10-2017_A3-Sensitive_Data_Exposure">The OWASP Top 10 2017 Project</a></footer>
    </blockquote>
</div>

<div class="seq-test">
    <div class="panel panel-default">
        <div class="panel-heading">Check the Strict-Transport-Security response header</div>
        <div class="panel-body">
            <ol>
                <li>Open the Developer tools of your browser (pressing the F12 key usually works).</li>
                <li>Go to the Network tab of the Developer tools.</li>
                <li>
                    Make a HTTP request to the application.<ol>
                        <li>In this application, refreshing this page should be sufficient.</li>
                    </ol>
                </li>
                <li>Locate the request in the Developer tools and inspect the response headers.</li>
            </ol>
            <ul>
                <li>If <risk-exposure is-exposed="true" />, the <code>Strict-Transport-Security</code> header will not be present, meaning that communication might not be encrypted.</li>
                <li>If <risk-exposure is-exposed="false" />, the <code>Strict-Transport-Security</code> header will be present and configured in a way that instructs the client to use HTTPS on subsequent requests.</li>
            </ul>
        </div>
    </div>
    <div class="panel panel-default">
        <div class="panel-heading">Check the Cache-Control response header</div>
        <div class="panel-body">
            <ol>
                <li>Open the Developer tools of your browser (pressing the F12 key usually works).</li>
                <li>Go to the Network tab of the Developer tools.</li>
                <li>
                    Make a HTTP request to the application to a resource containing sensitive information.
                    <ol>
                        <li>For this application, you can visit <a asp-controller="Risk" asp-action="Secrets">this page, containing sensitive client information</a>.</li>
                    </ol>
                </li>
                <li>Locate the request in the Developer tools and inspect the response headers.</li>
            </ol>
            <ul>
                <li>If <risk-exposure is-exposed="true" />, the <code>Cache-Control</code> header will not be present, meaning that sensitive data might be cached in the browser or by an intermediary HTTP proxy.</li>
                <li>If <risk-exposure is-exposed="false" />, the <code>Cache-Control</code> header will be present and configured in a way that instructs proxies and browsers to not store or use cached responses.</li>
            </ul>
        </div>
    </div>
    <div class="panel panel-default">
        <div class="panel-heading">Check for HTTP-to-HTTPS redirects</div>
        <div class="panel-body">
            <div class="alert alert-warning">Note: Before performing this test, <a href="https://really-simple-ssl.com/knowledge-base/clear-hsts-browser/">you should delete any previous HSTS policy settings for this domain from your browser</a>.</div>
            <ol>
                <li>
                    Make a HTTP request to the application to a resource containing sensitive information over an unencrypted (i.e. HTTP, not HTTPS) connection.
                    <ol>
                        <li>For this application, you can visit <a asp-protocol="http" asp-controller="Risk" asp-action="Secrets" asp-host="@(new HostString(Context.Request.Host.Host.Replace("https", "http"), Config.GetValue<int>("Bindings:http")))">this page, containing sensitive client information</a>.</li>
                    </ol>
                </li>

            </ol>
            <ul>
                <li>If <risk-exposure is-exposed="true" />, sensitive data (in this case, information about a client) will be transmitted over an unencrypted connection.</li>
                <li>If <risk-exposure is-exposed="false" />, the information will instead be redirected over an encrypted HTTPS connection (as should be indicated by a locked padlock icon near the address field in your browser).</li>
            </ul>
        </div>
    </div>
</div>